---
title: "AT4BR_Exercise_6_Kinga_Zajdel_2024-04-16"
format: html
editor: visual
---

### 1 - Load the “iris” dataset.

```{r}
install.packages("tidyverse", repos = "https://cran.r-project.org/")
library (tidyverse)
iris_tb <- (iris)
#iris_tb
rmarkdown::paged_table(iris_tb) # shows the table in pages
```

### 2 - Transform it to longer (tip: you should get 3 columns Species \| Trait \| Size )

```{r}
iris_tb_long<- iris_tb |>
  tidyr::pivot_longer(cols = !Species, names_to = "Trait", values_to = "Size") 

iris_tb_long
rmarkdown::paged_table(iris_tb_long) # shows the table
```

### 3 - Answer the following questions. (tip: you can answer each question “piping” only 2-3 commands )

-   A What is the **mean** length and width of the sepal and petal of each species?

```{r}
#iris_tb_mean<-iris_tb |> 
#  dplyr::select("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width", #"Species", )
#
# rmarkdown::paged_table(iris_tb_mean) # shows the table

iris_tb_long  |>  # using the long version with its cols!
  dplyr::group_by(Species, Trait) |> 
  summarise(mean = mean(Size)) # assigning name of the column
```

-   B What is the **largest** and **widest**,  **petal** and **sepal**,  of **virginica** and **versicolor** species?

```{r}
iris_tb_long |>  # using the long version with its col names!
  dplyr::filter(Species %in% c("virginica", "versicolor")) |> # no setosa
  group_by(Species, Trait) |> # as above: grouping by two categories
  summarise(maximum = max(Size))
# From Console:
# `summarise()` has grouped output by 'Species'. You can override using the `.groups` argument.
```

-   C For each species, for **sepal** and **petal**, **width** and **length**,  how many observations are above the mean?*
(tip: adding the means as column might help)
*3C Might seem difficult (it is not that difficult if you know the tricks ;) ). If you don’t manage to make it work, submit your best attempts and we will discuss it in class.

```{r}
# n() counts observations
# mutate() changes the values of columns and creates new columns.
# filter() chooses rows based on column values

#iris_tb_long

iris_tb_long |> # using the long version with its cols!
  group_by(Species, Trait) |> # as above: grouping by two categories
  mutate(mean = mean(Size)) |> # adding a column with mean values
  summarize(number_of_more = sum(Size > mean))
```

### A helpful webpage:
https://dplyr.tidyverse.org/articles

*No AI used.*
